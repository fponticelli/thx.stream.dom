// Generated by Haxe 3.3.0 (git build development @ 11d218f)
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Demo = function(container) {
	this.container = container;
};
Demo.__name__ = true;
Demo.mouseMove = function(demo) {
	var output = demo.output(demo.panel("mouse move","container\n  .streamMouseMove()\n  .map.fn('x: ${_.clientX}, y: ${_.clientY}')\n  .next(output.receive()).run();"));
	thx_stream_dom_Dom.streamEvent(demo.container,"mousemove",false).map(function(_) {
		return "x: " + _.clientX + ", y: " + _.clientY;
	}).next(thx_stream_dom_Dom.receive(output)).run();
};
Demo.click = function(demo) {
	var el = demo.panel("click count","click\n  .streamClick()\n  .count()\n  .map.fn('clicks: $_')\n  .next(output.receive()).run();");
	var click = demo.button("click",el);
	var output = demo.output(el);
	thx_stream_StreamExtensions.count(thx_stream_dom_Dom.streamEvent(click,"click",false)).map(function(_) {
		return "clicks: " + _;
	}).next(thx_stream_dom_Dom.receive(output)).run();
};
Demo.plusMinus = function(demo) {
	var el = demo.panel("plus & minus","plus\n  .streamClick().toValue(1)\n  .merge(\n    minus.streamClick().toValue(-1)\n  )\n  .reduce(function(acc, v) return acc + v, 0)\n  .map.fn('count: $_')\n  .next(output.receive()).run();");
	var plus = demo.button("+",el);
	var minus = demo.button("-",el);
	var output = demo.output(el);
	thx_stream_StreamExtensions.toValue(thx_stream_dom_Dom.streamEvent(plus,"click",false),1).merge(thx_stream_StreamExtensions.toValue(thx_stream_dom_Dom.streamEvent(minus,"click",false),-1)).reduce(function(acc,v) {
		return acc + v;
	},0).map(function(_) {
		return "count: " + _;
	}).next(thx_stream_dom_Dom.receive(output)).run();
};
Demo.replicate = function(demo) {
	var el = demo.panel("replicate text","input\n  .streamInput()\n  .map.fn(_.toUpperCase())\n  .next(output.receive()).run();");
	var input = demo.input("type text",el);
	var output = demo.output(el);
	var el1 = input;
	thx_stream_dom_Dom.streamEvent(el1,"input",false).map(function(_) {
		return el1.value;
	}).map(function(_1) {
		return _1.toUpperCase();
	}).next(thx_stream_dom_Dom.receive(output)).run();
};
Demo.draw = function(demo) {
	var canvas = demo.canvas(470,240,demo.panel("draw canvas","canvas.streamMouseMove()\n  .map(function(e) {\n    var bb = canvas.getBoundingClientRect();\n    return { x : e.clientX - bb.left, y : e.clientY - bb.top };\n  })\n  .slidingWindow(2, 2)\n  .pair(\n    canvas\n      .streamMouseDown().toTrue()\n      .merge(canvas.streamMouseUp().toFalse())\n  )\n  .filter.fn(_._1)\n  .left()\n  .next(function(e) {\n    ctx.beginPath();\n    ctx.moveTo(e[0].x, e[0].y);\n    ctx.lineTo(e[1].x, e[1].y);\n    ctx.stroke();\n  }).run();"));
	var ctx = canvas.getContext("2d",null);
	ctx.lineWidth = 4;
	ctx.strokeStyle = "#345";
	ctx.lineCap = "round";
	thx_stream_TupleStreamExtensions.left(thx_stream_dom_Dom.streamEvent(canvas,"mousemove",false).map(function(e) {
		var bb = canvas.getBoundingClientRect();
		return { x : e.clientX - bb.left, y : e.clientY - bb.top};
	}).slidingWindow(2,2).pair(thx_stream_StreamExtensions.toTrue(thx_stream_dom_Dom.streamEvent(canvas,"mousedown",false)).merge(thx_stream_StreamExtensions.toFalse(thx_stream_dom_Dom.streamEvent(canvas,"mouseup",false)))).filter(function(_) {
		return _._1;
	})).next(function(e1) {
		ctx.beginPath();
		ctx.moveTo(e1[0].x,e1[0].y);
		ctx.lineTo(e1[1].x,e1[1].y);
		ctx.stroke();
	}).run();
};
Demo.main = function() {
	var demo = new Demo(window.document.getElementById("container"));
	Demo.mouseMove(demo);
	Demo.click(demo);
	Demo.plusMinus(demo);
	Demo.replicate(demo);
	Demo.draw(demo);
};
Demo.prototype = {
	panel: function(label,code,container) {
		var panel = this.div("panel",container);
		this.h2(label,panel);
		if(null != code) {
			this.pre(code,panel);
		}
		return this.div(null,panel);
	}
	,h2: function(text,container) {
		var el = window.document.createElement("h2");
		el.innerHTML = text;
		this.append(el,container);
		return el;
	}
	,output: function(container) {
		return this.div("output",container);
	}
	,div: function(className,container) {
		var el = window.document.createElement("div");
		if(null != className) {
			el.className = className;
		}
		this.append(el,container);
		return el;
	}
	,pre: function(content,container) {
		var el = window.document.createElement("pre");
		el.textContent = content;
		this.append(el,container);
		return el;
	}
	,button: function(label,container) {
		var el = window.document.createElement("button");
		el.textContent = label;
		this.append(el,container);
		return el;
	}
	,input: function(placeholder,container) {
		var el = window.document.createElement("input");
		if(null != placeholder) {
			el.placeholder = placeholder;
		}
		this.append(el,container);
		return el;
	}
	,canvas: function(width,height,container) {
		var el = window.document.createElement("canvas");
		el.width = width;
		el.height = height;
		this.append(el,container);
		return el;
	}
	,append: function(el,container) {
		if(null == container) {
			container = this.container;
		}
		container.appendChild(el);
	}
	,__class__: Demo
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
var haxe_StackItem = { __ename__ : true, __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
haxe_CallStack.__name__ = true;
haxe_CallStack.getStack = function(e) {
	if(e == null) {
		return [];
	}
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) {
				site = haxe_CallStack.wrapCallSite(site);
			}
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		haxe_CallStack.lastException = e;
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.exceptionStack = function() {
	return haxe_CallStack.getStack(haxe_CallStack.lastException);
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) {
		return [];
	} else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") {
			stack.shift();
		}
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else {
				m.push(haxe_StackItem.Module(StringTools.trim(line)));
			}
		}
		return m;
	} else {
		return s;
	}
};
var haxe_ds_Option = { __ename__ : true, __constructs__ : ["Some","None"] };
haxe_ds_Option.Some = function(v) { var $x = ["Some",0,v]; $x.__enum__ = haxe_ds_Option; $x.toString = $estr; return $x; };
haxe_ds_Option.None = ["None",1];
haxe_ds_Option.None.toString = $estr;
haxe_ds_Option.None.__enum__ = haxe_ds_Option;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			haxe_CallStack.lastException = e;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class?o.__name__ != null:false) {
			return true;
		}
		if(cl == Enum?o.__ename__ != null:false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var thx_Either = { __ename__ : true, __constructs__ : ["Left","Right"] };
thx_Either.Left = function(value) { var $x = ["Left",0,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
thx_Either.Right = function(value) { var $x = ["Right",1,value]; $x.__enum__ = thx_Either; $x.toString = $estr; return $x; };
var thx_Error = function(message,stack,pos) {
	Error.call(this,message);
	this.message = message;
	if(null == stack) {
		try {
			stack = haxe_CallStack.exceptionStack();
		} catch( e ) {
			haxe_CallStack.lastException = e;
			stack = [];
		}
		if(stack.length == 0) {
			try {
				stack = haxe_CallStack.callStack();
			} catch( e1 ) {
				haxe_CallStack.lastException = e1;
				stack = [];
			}
		}
	}
	this.stackItems = stack;
	this.pos = pos;
};
thx_Error.__name__ = true;
thx_Error.fromDynamic = function(err,pos) {
	if(js_Boot.__instanceof(err,thx_Error)) {
		return err;
	}
	return new thx_error_ErrorWrapper("" + Std.string(err),err,null,pos);
};
thx_Error.__super__ = Error;
thx_Error.prototype = $extend(Error.prototype,{
	__class__: thx_Error
});
var thx_Functions = function() { };
thx_Functions.__name__ = true;
thx_Functions.noop = function() {
};
var thx_error_ErrorWrapper = function(message,innerError,stack,pos) {
	thx_Error.call(this,message,stack,pos);
	this.innerError = innerError;
};
thx_error_ErrorWrapper.__name__ = true;
thx_error_ErrorWrapper.__super__ = thx_Error;
thx_error_ErrorWrapper.prototype = $extend(thx_Error.prototype,{
	__class__: thx_error_ErrorWrapper
});
var thx_stream_Message = { __ename__ : true, __constructs__ : ["Next","Error","Done"] };
thx_stream_Message.Next = function(value) { var $x = ["Next",0,value]; $x.__enum__ = thx_stream_Message; $x.toString = $estr; return $x; };
thx_stream_Message.Error = function(err) { var $x = ["Error",1,err]; $x.__enum__ = thx_stream_Message; $x.toString = $estr; return $x; };
thx_stream_Message.Done = ["Done",2];
thx_stream_Message.Done.toString = $estr;
thx_stream_Message.Done.__enum__ = thx_stream_Message;
var thx_stream_Observer = function(handler) {
	this.handler = handler;
};
thx_stream_Observer.__name__ = true;
thx_stream_Observer.wrapHandler = function(handler) {
	var terminated = false;
	return function(msg) {
		if(terminated) {
			return;
		}
		handler(msg);
		switch(msg[1]) {
		case 1:case 2:
			terminated = true;
			break;
		default:
		}
	};
};
thx_stream_Observer.prototype = {
	message: function(msg) {
		this.handler(msg);
		return this;
	}
	,next: function(v) {
		return this.message(thx_stream_Message.Next(v));
	}
	,error: function(err) {
		return this.message(thx_stream_Message.Error(err));
	}
	,done: function() {
		return this.message(thx_stream_Message.Done);
	}
	,__class__: thx_stream_Observer
};
var thx_stream_Process = function(handler,init) {
	this.handler = thx_stream_Observer.wrapHandler(handler);
	this.init = init;
};
thx_stream_Process.__name__ = true;
thx_stream_Process.nextAsMessageHandler = function(handler) {
	return function(m) {
		if(m[1] == 0) {
			handler(m[2]);
		}
	};
};
thx_stream_Process.errorAsMessageHandler = function(handler) {
	return function(m) {
		if(m[1] == 1) {
			handler(m[2]);
		}
	};
};
thx_stream_Process.prototype = {
	error: function(handler) {
		var fa = this.handler;
		var fb = thx_stream_Process.errorAsMessageHandler(handler);
		return new thx_stream_Process(function(v) {
			fa(v);
			fb(v);
		},this.init);
	}
	,run: function() {
		this.init(this.handler);
	}
	,__class__: thx_stream_Process
};
var thx_stream_Stream = function(init) {
	this.init = function(handler) {
		var tryCancel = false;
		var cancel = null;
		cancel = init(function(msg) {
			handler(msg);
			switch(msg[1]) {
			case 1:case 2:
				if(null != cancel) {
					cancel();
				} else {
					tryCancel = true;
				}
				break;
			default:
			}
		});
		if(tryCancel) {
			cancel();
		}
		return cancel;
	};
};
thx_stream_Stream.__name__ = true;
thx_stream_Stream.ofValue = function(value) {
	return thx_stream_Stream.create(function(o) {
		o.next(value);
		o.done();
	});
};
thx_stream_Stream.create = function(init) {
	return thx_stream_Stream.cancellable(function(o,_) {
		init(o);
		return function() {
		};
	});
};
thx_stream_Stream.cancellable = function(init) {
	return new thx_stream_Stream(function(handler) {
		var o = new thx_stream_Observer(handler);
		var cancel = thx_Functions.noop;
		var addCancel = function(newcancel) {
			var fa = cancel;
			var fb = newcancel;
			cancel = function() {
				fa();
				fb();
			};
		};
		try {
			init(o,addCancel);
		} catch( e ) {
			haxe_CallStack.lastException = e;
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			o.error(thx_Error.fromDynamic(e,{ fileName : "Stream.hx", lineNumber : 53, className : "thx.stream.Stream", methodName : "cancellable"}));
		}
		return cancel;
	});
};
thx_stream_Stream.prototype = {
	message: function(handler) {
		return new thx_stream_Process(handler,this.init);
	}
	,next: function(handler) {
		return new thx_stream_Process(thx_stream_Process.nextAsMessageHandler(handler),this.init);
	}
	,filter: function(predicate) {
		var _gthis = this;
		return thx_stream_Stream.create(function(o) {
			_gthis.message(function(msg) {
				switch(msg[1]) {
				case 0:
					var v = msg[2];
					if(predicate(v)) {
						o.next(v);
					}
					break;
				case 1:
					o.error(msg[2]);
					break;
				case 2:
					o.done();
					break;
				}
			}).run();
		});
	}
	,slidingWindow: function(minSize,maxSize) {
		var _gthis = this;
		return thx_stream_Stream.create(function(o) {
			var acc = [];
			_gthis.message(function(msg) {
				switch(msg[1]) {
				case 0:
					acc.push(msg[2]);
					if(acc.length > maxSize) {
						acc = acc.slice(1,maxSize + 1);
					}
					if(acc.length >= minSize) {
						o.next(acc);
					}
					break;
				case 1:
					o.error(msg[2]);
					break;
				case 2:
					o.done();
					break;
				}
			}).run();
		});
	}
	,flatMap: function(handler) {
		var _gthis = this;
		return thx_stream_Stream.create(function(o) {
			_gthis.message(function(msg) {
				switch(msg[1]) {
				case 0:
					handler(msg[2]).next($bind(o,o.next)).error($bind(o,o.error)).run();
					break;
				case 1:
					o.error(msg[2]);
					break;
				case 2:
					o.done();
					break;
				}
			}).run();
		});
	}
	,map: function(handler) {
		return this.flatMap(function(v) {
			return thx_stream_Stream.ofValue(handler(v));
		});
	}
	,reduce: function(handler,acc) {
		return this.map(function(v) {
			acc = handler(acc,v);
			return acc;
		});
	}
	,merge: function(other) {
		var _gthis = this;
		return thx_stream_Stream.create(function(o) {
			_gthis.message($bind(o,o.message)).run();
			other.message($bind(o,o.message)).run();
		});
	}
	,pair: function(other) {
		var _gthis = this;
		return thx_stream_Stream.create(function(o) {
			var left = haxe_ds_Option.None;
			var right = haxe_ds_Option.None;
			_gthis.message(function(msg) {
				switch(msg[1]) {
				case 0:
					if(right[1] == 0) {
						var a = msg[2];
						left = haxe_ds_Option.Some(a);
						o.next({ _0 : a, _1 : right[2]});
					} else {
						left = haxe_ds_Option.Some(msg[2]);
					}
					break;
				case 1:
					o.error(msg[2]);
					break;
				case 2:
					o.done();
					break;
				}
			}).run();
			other.message(function(msg1) {
				switch(msg1[1]) {
				case 0:
					if(left[1] == 0) {
						var b = msg1[2];
						right = haxe_ds_Option.Some(b);
						o.next({ _0 : left[2], _1 : b});
					} else {
						right = haxe_ds_Option.Some(msg1[2]);
					}
					break;
				case 1:
					o.error(msg1[2]);
					break;
				case 2:
					o.done();
					break;
				}
			}).run();
		});
	}
	,__class__: thx_stream_Stream
};
var thx_stream_StreamExtensions = function() { };
thx_stream_StreamExtensions.__name__ = true;
thx_stream_StreamExtensions.count = function(stream) {
	return thx_stream_TupleStreamExtensions.left(thx_stream_StreamExtensions.withIndex(stream,1));
};
thx_stream_StreamExtensions.toTrue = function(stream) {
	return stream.map(function(_) {
		return true;
	});
};
thx_stream_StreamExtensions.toFalse = function(stream) {
	return stream.map(function(_) {
		return false;
	});
};
thx_stream_StreamExtensions.toValue = function(stream,value) {
	return stream.map(function(_) {
		return value;
	});
};
thx_stream_StreamExtensions.withIndex = function(stream,start) {
	if(start == null) {
		start = 0;
	}
	return stream.map(function(v) {
		start += 1;
		return { _0 : start - 1, _1 : v};
	});
};
var thx_stream_TupleStreamExtensions = function() { };
thx_stream_TupleStreamExtensions.__name__ = true;
thx_stream_TupleStreamExtensions.left = function(stream) {
	return stream.map(function(t) {
		return t._0;
	});
};
var thx_stream_dom_Dom = function() { };
thx_stream_dom_Dom.__name__ = true;
thx_stream_dom_Dom.streamEvent = function(el,name,capture) {
	if(capture == null) {
		capture = false;
	}
	return thx_stream_Stream.cancellable(function(o,addCancel) {
		el.addEventListener(name,$bind(o,o.next),capture);
		addCancel(function() {
			el.removeEventListener(name,$bind(o,o.next),capture);
		});
	});
};
thx_stream_dom_Dom.receive = function(el,force) {
	if(force == null) {
		force = false;
	}
	return function(text) {
		if(el.textContent != text || force) {
			el.textContent = text;
		}
	};
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
js_Boot.__toStr = ({ }).toString;
Demo.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
